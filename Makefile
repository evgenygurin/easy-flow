.PHONY: help install format lint test check security clean run dev

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
BLUE := \033[36m
GREEN := \033[32m
YELLOW := \033[33m
RED := \033[31m
NC := \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "$(BLUE)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(GREEN)%-20s$(NC) %s\n", $$1, $$2}'

check-setup: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–æ–µ–∫—Ç–∞ (Python 3.12 + uv)
	@echo "$(BLUE)–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	uv run python scripts/check_setup.py

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(BLUE)–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	uv sync
	@echo "$(GREEN)‚úì –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

install-dev: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BLUE)–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	uv sync --dev
	uv run pre-commit install
	@echo "$(GREEN)‚úì –°—Ä–µ–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞$(NC)"

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "$(BLUE)–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...$(NC)"
	uv run ruff format app/ tests/
	@echo "$(GREEN)‚úì –ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω$(NC)"

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏
	@echo "$(BLUE)–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏...$(NC)"
	uv run ruff check app/ tests/
	uv run ruff format --check app/ tests/
	uv run mypy app/ --config-file=pyproject.toml
	@echo "$(GREEN)‚úì –õ–∏–Ω—Ç–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω$(NC)"

security: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
	@echo "$(BLUE)–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...$(NC)"
	@echo "$(YELLOW)–ó–∞–ø—É—Å–∫ Bandit...$(NC)"
	@if uv run bandit -r app/ --format json --output bandit-report.json; then \
		echo "$(GREEN)‚úì Bandit: –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ$(NC)"; \
	else \
		echo "$(RED)‚ö† Bandit: –Ω–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ bandit-report.json$(NC)"; \
	fi
	@echo "$(YELLOW)–ó–∞–ø—É—Å–∫ Safety...$(NC)"
	@if uv run safety check --json --output safety-report.json; then \
		echo "$(GREEN)‚úì Safety: —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ$(NC)"; \
	else \
		echo "$(RED)‚ö† Safety: –Ω–∞–π–¥–µ–Ω—ã —É—è–∑–≤–∏–º–æ—Å—Ç–∏, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ safety-report.json$(NC)"; \
	fi
	@echo "$(GREEN)‚úì –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"
	@echo "$(YELLOW)–û—Ç—á–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ bandit-report.json –∏ safety-report.json$(NC)"

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	uv run pytest tests/ -v --tb=short
	@echo "$(GREEN)‚úì –¢–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã$(NC)"

test-cov: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º...$(NC)"
	uv run pytest tests/ --cov=app --cov-report=term-missing --cov-report=html
	@echo "$(GREEN)‚úì –¢–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω—ã$(NC)"
	@echo "$(YELLOW)HTML –æ—Ç—á–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ htmlcov/index.html$(NC)"

check: format lint security test-cov ## –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ + –ª–∏–Ω—Ç–∏–Ω–≥ + –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å + —Ç–µ—Å—Ç—ã)
	@echo "$(GREEN)‚úì –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!$(NC)"

pre-commit: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å pre-commit —Ö—É–∫–∏
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ pre-commit —Ö—É–∫–æ–≤...$(NC)"
	uv run pre-commit run --all-files
	@echo "$(GREEN)‚úì Pre-commit —Ö—É–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã$(NC)"

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	@echo "$(BLUE)–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...$(NC)"
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	find . -type d -name ".pytest_cache" -exec rm -rf {} + 2>/dev/null || true
	find . -type d -name ".ruff_cache" -exec rm -rf {} + 2>/dev/null || true
	find . -type d -name ".mypy_cache" -exec rm -rf {} + 2>/dev/null || true
	find . -type d -name "htmlcov" -exec rm -rf {} + 2>/dev/null || true
	find . -name "coverage.xml" -delete 2>/dev/null || true
	find . -name ".coverage" -delete 2>/dev/null || true
	find . -name "bandit-report.json" -delete 2>/dev/null || true
	find . -name "safety-report.json" -delete 2>/dev/null || true
	@echo "$(GREEN)‚úì –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã$(NC)"

run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...$(NC)"
	uv run uvicorn main:app --host 0.0.0.0 --port 8000

dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	uv run uvicorn main:app --host 0.0.0.0 --port 8000 --reload

docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	@echo "$(BLUE)–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞...$(NC)"
	docker build -t easy-flow .
	@echo "$(GREEN)‚úì Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω$(NC)"

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ Docker
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ –≤ Docker...$(NC)"
	docker run -p 8000:8000 easy-flow

docker-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å development –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å Docker Compose
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ development –æ–∫—Ä—É–∂–µ–Ω–∏—è...$(NC)"
	docker-compose up -d
	@echo "$(GREEN)‚úì Development –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ$(NC)"

docker-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker Compose
	@echo "$(BLUE)–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose...$(NC)"
	docker-compose down
	@echo "$(GREEN)‚úì Docker Compose –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"

migration-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ Python 3.12 + uv
	@echo "$(GREEN)‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ Python 3.12 + uv –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"
	@echo ""
	@echo "$(BLUE)–û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:$(NC)"
	@echo "  üì¶ $(YELLOW)pyproject.toml$(NC) - –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ Python 3.12"
	@echo "  üêç $(YELLOW).python-version$(NC) - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è 3.12"
	@echo "  üê≥ $(YELLOW)Dockerfile$(NC) - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Python 3.12 + uv"
	@echo "  üîß $(YELLOW)Makefile$(NC) - –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç uv"
	@echo "  üìö $(YELLOW)README.md$(NC) - –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
	@echo "  üéØ $(YELLOW)CLAUDE.md$(NC) - –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo ""
	@echo "$(BLUE)–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:$(NC)"
	@echo "  1. $(GREEN)make check-setup$(NC)  - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É"
	@echo "  2. $(GREEN)make install-dev$(NC)  - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@echo "  3. $(GREEN)make dev$(NC)          - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É"

# –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
.DEFAULT_GOAL := help