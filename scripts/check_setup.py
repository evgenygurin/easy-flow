#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ —Å Python 3.12 –∏ uv."""

import sys
import subprocess
from pathlib import Path


def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é Python."""
    version = sys.version_info
    print(f"üêç Python: {version.major}.{version.minor}.{version.micro}")
    
    if version.major == 3 and version.minor >= 12:
        print("‚úÖ Python 3.12+ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    else:
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.12+")
        return False


def check_uv_installed():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É uv."""
    try:
        result = subprocess.run(['uv', '--version'], capture_output=True, text=True)
        print(f"üì¶ uv: {result.stdout.strip()}")
        print("‚úÖ uv —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    except FileNotFoundError:
        print("‚ùå uv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ uv: curl -LsSf https://astral.sh/uv/install.sh | sh")
        return False


def check_project_files():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞."""
    required_files = [
        'pyproject.toml',
        'uv.lock',
        '.python-version',
        'main.py',
        'app/__init__.py'
    ]
    
    missing_files = []
    for file_path in required_files:
        if not Path(file_path).exists():
            missing_files.append(file_path)
    
    if not missing_files:
        print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        return True
    else:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
        return False


def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π."""
    try:
        result = subprocess.run(['uv', 'sync', '--dry-run'], 
                              capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
            return True
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏")
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ Easy Flow\n")
    
    checks = [
        ("Python 3.12+", check_python_version),
        ("uv package manager", check_uv_installed), 
        ("Project files", check_project_files),
        ("Dependencies", check_dependencies),
    ]
    
    results = []
    for name, check_func in checks:
        print(f"\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞: {name}")
        results.append(check_func())
    
    print(f"\n{'='*50}")
    
    if all(results):
        print("üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:")
        print("  make install-dev  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ dev-–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        print("  make dev          # –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
        print("  make test         # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
        print("–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º")
        sys.exit(1)


if __name__ == "__main__":
    main()