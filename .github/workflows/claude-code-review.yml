name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  claude-review:
    # Добавлена проверка репозитория для безопасности
    if: github.repository == 'evgenygurin/easy-flow'
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Добавлен timeout для предотвращения зависших задач
    
    permissions:
      contents: write  # Разрешение для коммитов
      pull-requests: write
      issues: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Увеличен fetch-depth для лучшего анализа истории git
          fetch-depth: 10

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta

        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

          # Включен sticky comment для предотвращения спама
          use_sticky_comment: true
          
          # Ограничение инструментов для безопасности
          allowed_tools: "Bash(pytest),Bash(uvicorn main:app --reload),Read,Grep,Glob,Edit"
          
          # Системный промпт для русскоязычного проекта
          direct_prompt: |
            Ты - опытный разработчик, проводящий code review для Python/FastAPI проекта. 
            Проанализируй этот pull request и дай обратную связь по:
            
            - Качеству кода и соответствию стандартам Python/FastAPI
            - Потенциальным багам и проблемам безопасности
            - Производительности и оптимизации
            - Соответствию архитектуре проекта
            - Покрытию тестами
            
            Отвечай на русском языке, будь конструктивным и дружелюбным.
            Используй pytest для запуска тестов если нужно.
          
          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
          
          # Optional: Add specific tools for running tests or linting
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

