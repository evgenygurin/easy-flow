name: üè∑Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ issue —Å –ø–æ–º–æ—â—å—é Gemini

on:
  issues:
    types: [opened, reopened]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      issue_number:
        description: '–ù–æ–º–µ—Ä issue –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏'
        required: true
        type: number

jobs:
  triage-issue:
    if: >
      github.event_name == 'issues' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' && 
       contains(github.event.comment.body, '@gemini-cli /triage') &&
       (github.event.comment.author_association == 'OWNER' ||
        github.event.comment.author_association == 'MEMBER' ||
        github.event.comment.author_association == 'COLLABORATOR'))
    timeout-minutes: 5
    permissions:
      issues: write
      contents: read
      id-token: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.issue.number || github.event.inputs.issue_number }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - name: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ GitHub App
        id: generate_token
        if: ${{ vars.APP_ID }}
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate_token.outputs.token || secrets.GITHUB_TOKEN }}

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ issue
        id: set_issue_context
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "issue_number=${{ github.event.inputs.issue_number }}" >> $GITHUB_OUTPUT
          else
            echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          fi

      - name: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π issue
        id: get_issue_details
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token || secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ steps.set_issue_context.outputs.issue_number }}
        run: |
          ISSUE_JSON=$(gh issue view $ISSUE_NUMBER --json title,body)
          echo "issue_title=$(echo $ISSUE_JSON | jq -r .title)" >> $GITHUB_OUTPUT
          # Using a delimiter to handle multiline body
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "issue_body<<$EOF" >> $GITHUB_OUTPUT
          echo "$(echo $ISSUE_JSON | jq -r .body)" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      - name: –ó–∞–ø—É—Å–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ issue —Å –ø–æ–º–æ—â—å—é Gemini
        uses: google-gemini/gemini-cli-action@main
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token || secrets.GITHUB_TOKEN }}
          ISSUE_TITLE: ${{ steps.get_issue_details.outputs.issue_title }}
          ISSUE_BODY: ${{ steps.get_issue_details.outputs.issue_body }}
          ISSUE_NUMBER: ${{ steps.set_issue_context.outputs.issue_number }}
          REPOSITORY: ${{ github.repository }}
        with:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          OTLP_GCP_WIF_PROVIDER: ${{ secrets.OTLP_GCP_WIF_PROVIDER }}
          OTLP_GOOGLE_CLOUD_PROJECT: ${{ secrets.OTLP_GOOGLE_CLOUD_PROJECT }}
          settings_json: |
            {
              "coreTools": [
                "run_shell_command(gh label list)",
                "run_shell_command(gh issue edit)"
              ],
              "telemetry": {
                "enabled": true,
                "target": "gcp"
              },
              "sandbox": false
            }
          prompt: |
            –¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ issue. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–µ–∫—É—â—É—é –∑–∞–¥–∞—á—É –≤ GitHub –∏ –ø—Ä–∏–º–µ–Ω–∏ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–µ—Ç–æ–∫.

            –®–∞–≥–∏:
            1. –í—ã–ø–æ–ª–Ω–∏: `gh label list`, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ç–æ–∫.
            2. –ò–∑—É—á–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ç–µ–ª–æ issue, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.
            3. –í—ã–±–µ—Ä–∏ –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –º–µ—Ç–∫–∏ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö. –ï—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ, —É—Å—Ç–∞–Ω–æ–≤–∏ –º–µ—Ç–∫–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —à–∞–±–ª–æ–Ω–∞–º `kind/*`, `area/*` –∏ `priority/*`.
            4. –ü—Ä–∏–º–µ–Ω–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ –∫ —ç—Ç–æ–π issue —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã: `gh issue edit ISSUE_NUMBER --add-label "–º–µ—Ç–∫–∞1,–º–µ—Ç–∫–∞2"`
            5. –ï—Å–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–µ—Ç–∫–∞ `status/needs-triage`, —É–¥–∞–ª–∏ –µ—ë —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã: `gh issue edit ISSUE_NUMBER --remove-label "status/needs-triage"`

            –ü—Ä–∞–≤–∏–ª–∞:
            - –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ç–µ –º–µ—Ç–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏.
            - –ù–µ –¥–æ–±–∞–≤–ª—è–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –Ω–µ –∏–∑–º–µ–Ω—è–π —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ issue.
            - –°–æ—Ä—Ç–∏—Ä—É–π —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â—É—é issue.
            - –ù–∞–∑–Ω–∞—á—å –≤—Å–µ –ø—Ä–∏–º–µ–Ω–∏–º—ã–µ –º–µ—Ç–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ issue.
