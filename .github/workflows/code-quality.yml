name: Проверка качества кода

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - name: Checkout кода
      uses: actions/checkout@v4

    - name: Установка Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Кэширование pip зависимостей
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Установка зависимостей
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Проверка с ruff (линтинг)
      run: |
        ruff check app/ tests/ --output-format=github

    - name: Проверка с ruff (форматирование)
      run: |
        ruff format --check app/ tests/

    - name: Проверка с Black
      run: |
        black --check app/ tests/

    - name: Проверка типов с mypy
      run: |
        mypy app/ --config-file=pyproject.toml

    - name: Проверка безопасности с bandit
      run: |
        bandit -r app/ --format json --output bandit-report.json || true

    - name: Загрузка отчета bandit
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: bandit-security-report
        path: bandit-report.json

    - name: Проверка уязвимостей с safety
      run: |
        safety check --json --output safety-report.json || true

    - name: Загрузка отчета safety
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: safety-vulnerability-report
        path: safety-report.json

    - name: Запуск тестов
      run: |
        pytest tests/ --cov=app --cov-report=xml --cov-report=html

    - name: Загрузка отчета покрытия
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-report
        path: |
          coverage.xml
          htmlcov/

    - name: Комментарий с результатами покрытия
      uses: orgoro/coverage@v3.1
      if: github.event_name == 'pull_request'
      with:
        coverageFile: coverage.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        thresholdAll: 0.8
        thresholdNew: 0.9